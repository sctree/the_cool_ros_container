#!/usr/bin/env bash

#docker run -it -p 5901:5901 crc /bin/bash

#docker run --privileged --cgroupns=host -v /sys/fs/cgroup:/sys/fs/cgroup:ro -d --name ubuntu-systemd crc

#docker run --privileged --cgroupns=host -v /sys/fs/cgroup:/sys/fs/cgroup:ro -d --name ubuntu-systemd crc /sbin/init

# Running container interactively. currently the container immediately stops after running.
# However, the container name is still used and must be removed before the run command can be attempted again.
#docker run --privileged --cgroupns=host -v /sys/fs/cgroup:/sys/fs/cgroup:ro --name ubuntu-systemd -it crc /sbin/init

# Mounting additional directories to make them writable
#docker run --privileged --cgroupns=host -v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp:/tmp -v /run:/run -d --name ubuntu-systemd crc /sbin/init

# Need to start VNC before launching systemd since systemd is now the main process instead of an interactive shell.
# also, expose ports
#docker run --privileged --cgroupns=host -v /sys/fs/cgroup:/sys/fs/cgroup:rw -d --name ubuntu-systemd -p 5901:5901 crc /bin/bash -c "tightvncserver :1 && /sbin/init"

container_name="quick_ros_docker"
external_vnc_port="5901"
external_ssh_port="2222"
external_foxglove_port="8765"
external_visual_frontend_port="9093"
external_visual_backend_port="9094"

echo may take a second
docker stop "$container_name" &>/dev/null
docker rm "$container_name" &>/dev/null

# -v /sys/fs/cgroup:/sys/fs/cgroup:rw \
mkdir -p "$PWD/docker_home"
docker run --privileged --cgroupns=host \
    -v "$PWD"/docker_home:/home/user1:rw \
    -d --name "$container_name" \
    -p "$external_vnc_port":5900 \
    -p "$external_ssh_port":22 \
    -p "$external_foxglove_port":8765 \
    -p "$external_visual_frontend_port":9093 \
    -p "$external_visual_backend_port":9094 \
    -e VNC_PASSWORD=cbd109 \
    -e VNC_RESOLUTION=1280x800 \
    -P \
    crc bash -c "while true; do sleep 1000; done"

docker exec -it "$container_name" bash

#docker exec -it "$container_name" bash -c "foxglove-studio --listen 0.0.0.0 & exec bash" && \
#docker exec -it my-container bash -c "source /opt/ros/noetic/setup.bash && foxglove-websocket --port 8765"
# docker exec -it "$container_name" bash -c "foxglove-studio --listen 0.0.0.0 --port 8765 & exec bash"
#docker exec -it "$container_name" bash systemctl status foxglove.service & exec bash


# ^ this works but run this in terminal:

#docker exec -it "$container_name" bash
#tightvncserver :1

# docker exec into it and then start the VNC manually
# ^ or do CMD ["bash", "-c", "/sbin/init && bash"] in the dockerfile. Attaches a bash script