// Copyright 2018-2020 Cruise LLC
// Copyright 2021 Foxglove Technologies Inc
//
// This source code is licensed under the Apache License, Version 2.0,
// found in the LICENSE file in the root directory of this source tree.
// You may not use this file except in compliance with the License.

import { Time } from "https://esm.sh/@foxglove/rostime";

// reads through a buffer and extracts { [key: string]: value: string }
// pairs - the buffer is expected to have length prefixed utf8 strings
// with a '=' separating the key and value
const EQUALS_CHARCODE = "=".charCodeAt(0);

export function extractFields(buffer: Uint8Array): Record<string, Uint8Array> {
  if (buffer.length < 4) {
    throw new Error("fields are truncated.");
  }

  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);
  let offset = 0;
  const fields: Record<string, Uint8Array> = {};

  while (offset < buffer.length) {
    const length = view.getInt32(offset, true);
    offset += 4;

    if (offset + length > buffer.length) {
      throw new Error("Header fields are corrupt.");
    }

    const field = buffer.subarray(offset, offset + length);
    const index = field.indexOf(EQUALS_CHARCODE);
    if (index === -1) {
      throw new Error("Header field is missing equals sign.");
    }

    const fieldName = new TextDecoder().decode(field.subarray(0, index));
    fields[fieldName] = field.subarray(index + 1);
    offset += length;
  }

  return fields;
}

// reads a Time object out of a buffer at the given offset
export function extractTime(buffer: Uint8Array, offset: number): Time {
  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);
  const sec = view.getUint32(offset, true);
  const nsec = view.getUint32(offset + 4, true);
  return { sec, nsec };
}

// denoCacheMetadata={"headers":{"x-served-by":"cache-iah17227-IAH","x-cache-hits":"0","source-age":"0","x-timer":"S1753134630.925087,VS0,VE94","access-control-allow-origin":"*","accept-ranges":"bytes","x-github-request-id":"3B2B:2E1C61:5BA7B:74F85:687EB621","vary":"Authorization,Accept-Encoding","cache-control":"max-age=300","cross-origin-resource-policy":"cross-origin","expires":"Mon, 21 Jul 2025 21:55:30 GMT","strict-transport-security":"max-age=31536000","x-xss-protection":"1; mode=block","x-fastly-request-id":"2026958b8c7a75531e07cc99fcfd76c275b21cd0","content-type":"text/plain; charset=utf-8","date":"Mon, 21 Jul 2025 21:50:30 GMT","content-security-policy":"default-src 'none'; style-src 'unsafe-inline'; sandbox","x-cache":"MISS","via":"1.1 varnish","etag":"W/\"eaacd0caa4db8471aba2526da1787bb6113739e3f0ae9a04ec853a73ad705eef\"","x-content-type-options":"nosniff","x-frame-options":"deny"},"url":"https://raw.githubusercontent.com/jeff-hykin/rapid_ros_server/dev/subrepos/foxglove_rosbag/src/fields.ts","time":1753134630}