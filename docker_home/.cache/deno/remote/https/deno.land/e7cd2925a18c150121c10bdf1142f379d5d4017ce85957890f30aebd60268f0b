// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.

import { CbFunction, load, loadAll } from "./loader/loader.ts";
import type { LoaderStateOptions } from "./loader/loader_state.ts";

export type ParseOptions = LoaderStateOptions;

/**
 * Parses `content` as single YAML document.
 *
 * Returns a JavaScript object or throws `YAMLException` on error.
 * By default, does not support regexps, functions and undefined. This method is safe for untrusted data.
 */
export function parse(content: string, options?: ParseOptions): unknown {
  return load(content, options);
}

/**
 * Same as `parse()`, but understands multi-document sources.
 * Applies iterator to each document if specified, or returns array of documents.
 *
 * @example
 * ```ts
 * import { parseAll } from "https://deno.land/std@$STD_VERSION/encoding/yaml.ts";
 *
 * const data = parseAll(`
 * ---
 * id: 1
 * name: Alice
 * ---
 * id: 2
 * name: Bob
 * ---
 * id: 3
 * name: Eve
 * `);
 * console.log(data);
 * // => [ { id: 1, name: "Alice" }, { id: 2, name: "Bob" }, { id: 3, name: "Eve" } ]
 * ```
 */
export function parseAll(
  content: string,
  iterator: CbFunction,
  options?: ParseOptions,
): void;
export function parseAll(content: string, options?: ParseOptions): unknown;
export function parseAll(
  content: string,
  iterator?: CbFunction | ParseOptions,
  options?: ParseOptions,
): unknown {
  return loadAll(content, iterator, options);
}

// denoCacheMetadata={"headers":{"server-timing":"fetchSource;dur=8","x-amz-cf-id":"QDXtHBGpVOPkcSXa8R4yZwhq4QRfwvV5JmuoAWvHzTXmRPZadDshaQ==","content-type":"application/typescript; charset=utf-8","x-amz-replication-status":"COMPLETED","x-amz-version-id":"0sIUbacV.Z4kyNSW3CqUWrV8eqeMG.zy","x-content-type-options":"nosniff","cache-control":"public, max-age=31536000, immutable","server":"deno/gcp-us-east4","cross-origin-embedder-policy":"same-origin","etag":"\"41433c5684a5293b96270b153379fc86\"","content-length":"1640","x-cache":"Hit from cloudfront","vary":"Accept-Encoding, Origin","accept-ranges":"bytes","cross-origin-opener-policy":"same-origin","date":"Sun, 06 Apr 2025 04:46:06 GMT","age":"10150328","strict-transport-security":"max-age=63072000; includeSubDomains; preload","access-control-allow-origin":"*","x-frame-options":"DENY","content-security-policy":"default-src 'none'; style-src 'unsafe-inline'; sandbox","cross-origin-resource-policy":"same-origin","last-modified":"Wed, 14 Dec 2022 22:35:43 GMT","referrer-policy":"strict-origin-when-cross-origin","via":"http/2 edgeproxy-h","x-amz-cf-pop":"IAD61-P1","x-amz-server-side-encryption":"AES256"},"url":"https://deno.land/std@0.168.0/encoding/_yaml/parse.ts","time":1754065093}