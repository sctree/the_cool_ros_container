// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.

import type { YAMLError } from "../error.ts";
import type { Schema, SchemaDefinition, TypeMap } from "../schema.ts";
import { State } from "../state.ts";
import type { Type } from "../type.ts";
import type { Any, ArrayObject } from "../utils.ts";

export interface LoaderStateOptions {
  legacy?: boolean;
  listener?: ((...args: Any[]) => void) | null;
  /** string to be used as a file path in error/warning messages. */
  filename?: string;
  /** specifies a schema to use. */
  schema?: SchemaDefinition;
  /** compatibility with JSON.parse behaviour. */
  json?: boolean;
  /** function to call on warning messages. */
  onWarning?(this: null, e?: YAMLError): void;
}

// deno-lint-ignore no-explicit-any
export type ResultType = any[] | Record<string, any> | string;

export class LoaderState extends State {
  public documents: Any[] = [];
  public length: number;
  public lineIndent = 0;
  public lineStart = 0;
  public position = 0;
  public line = 0;
  public filename?: string;
  public onWarning?: (...args: Any[]) => void;
  public legacy: boolean;
  public json: boolean;
  public listener?: ((...args: Any[]) => void) | null;
  public implicitTypes: Type[];
  public typeMap: TypeMap;

  public version?: string | null;
  public checkLineBreaks?: boolean;
  public tagMap?: ArrayObject;
  public anchorMap?: ArrayObject;
  public tag?: string | null;
  public anchor?: string | null;
  public kind?: string | null;
  public result: ResultType | null = "";

  constructor(
    public input: string,
    {
      filename,
      schema,
      onWarning,
      legacy = false,
      json = false,
      listener = null,
    }: LoaderStateOptions,
  ) {
    super(schema);
    this.filename = filename;
    this.onWarning = onWarning;
    this.legacy = legacy;
    this.json = json;
    this.listener = listener;

    this.implicitTypes = (this.schema as Schema).compiledImplicit;
    this.typeMap = (this.schema as Schema).compiledTypeMap;

    this.length = input.length;
  }
}

// denoCacheMetadata={"headers":{"strict-transport-security":"max-age=63072000; includeSubDomains; preload","x-amz-cf-id":"qkS44bKK7ZbzE0HEGNLVSntn5j-PDwnRJi9SkjhhkPOC_1kygjgFyQ==","x-cache":"Hit from cloudfront","referrer-policy":"strict-origin-when-cross-origin","x-amz-version-id":"4uL7i_6p5borDC4uqEzJ_swlGph3ZHIX","cross-origin-opener-policy":"same-origin","content-length":"2260","date":"Sun, 06 Apr 2025 04:46:06 GMT","content-type":"application/typescript; charset=utf-8","vary":"Accept-Encoding, Origin","last-modified":"Wed, 14 Dec 2022 22:35:43 GMT","access-control-allow-origin":"*","cross-origin-embedder-policy":"same-origin","etag":"\"4e53ab595e10741e95159386b00f91ac\"","x-amz-cf-pop":"IAD61-P1","server-timing":"fetchSource;dur=14","server":"deno/gcp-us-east4","x-amz-replication-status":"COMPLETED","cross-origin-resource-policy":"same-origin","x-amz-server-side-encryption":"AES256","x-content-type-options":"nosniff","via":"http/2 edgeproxy-h","age":"10150328","content-security-policy":"default-src 'none'; style-src 'unsafe-inline'; sandbox","accept-ranges":"bytes","cache-control":"public, max-age=31536000, immutable","x-frame-options":"DENY"},"url":"https://deno.land/std@0.168.0/encoding/_yaml/loader/loader_state.ts","time":1754065093}